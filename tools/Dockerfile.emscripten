FROM emscripten/emsdk:3.1.35

WORKDIR /app

# Copy your project files
COPY . /app

# Build raylib with Emscripten
RUN cd raylib-master/src \
    && emmake make PLATFORM=PLATFORM_WEB

# Build rlImGui with Emscripten
RUN cd rlImGui \
    && emcc -I../raylib-master/src -I../imgui-master -I./include -I./include/extras src/*.cpp ../imgui-master/*.cpp -o rlimgui.bc

# Build your project using CMake and Emscripten
RUN cd Game \
    && emcc -I../raylib-master/src -I../rlImGui/include -I../imgui-master src/*.cpp ../rlImGui/rlimgui.bc ../raylib-master/src/libraylib.a -s USE_GLFW=3 -s TOTAL_MEMORY=16777216 -s ASYNCIFY -o index.html

# (Optional) Install and configure Nginx to serve the compiled project
RUN apt-get update \
    && apt-get install -y nginx \
    && rm -rf /var/lib/apt/lists/* \
    && echo "server { listen 80; location / { root /app/Game; index index.html; } }" > /etc/nginx/conf.d/default.conf

# Run Nginx
CMD ["nginx", "-g", "daemon off;"]
















# FROM emscripten/emsdk:3.1.35

# WORKDIR /app

# # Copy your project files
# COPY RaylibEmscriptenDocker-Template /app

# # Build your project using CMake and Emscripten
# RUN emcmake cmake . \
#     && emmake make

# Keep the container alive
#CMD ["tail", "-f", "/dev/null"]

# RUN em++ -o game.html main.cpp -Os -Wall ./raylib-4.5.0_webassembly/lib/libraylib.a -I. -I./raylib-4.5.0_webassembly/include/ -L. -L./raylib-4.5.0_webassembly/lib/ -s USE_GLFW=3 --shell-file ./minshell.html -DPLATFORM_WEB
